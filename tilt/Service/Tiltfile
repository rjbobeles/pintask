def setup_service_compose():
    docker_compose(
        configPaths="./docker/docker-compose-services.yml",
        env_file=".env",
        project_name="pintask",
        wait=True
    )
    dc_resource('api-main', labels=['service'], resource_deps=["mongodb"])
    dc_resource('app-main', labels=['application'], resource_deps=['api-main'])  # Due to OS restrictions; you cant run this on port 80

def setup_k8s_application():
    k8s_yaml(kustomize('./kubernetes/overlays/local/namespace'))
    k8s_resource(
        objects=[
            'pintask-local:namespace', 
            'local-namespace-resource-quota:resourcequota', 
            'local-namespace-limit-range:limitrange', 
            'local-namespace-network-deny-all:networkpolicy'
        ],
        new_name='namespace-resources',
        labels=['resources']
    )

    # Api Main
    k8s_yaml(kustomize('./kubernetes/overlays/local/applications/api-main'))
    docker_build(
        ref='api-main', 
        context='.', 
        dockerfile='./docker/DockerFile.api-main',
        extra_tag=['latest']
    )
    k8s_resource(
        workload='local-api-main', 
        new_name='api-main', 
        port_forwards=4000,
        labels=['service'],
        resource_deps=['namespace-resources']
    )
    k8s_resource(
        objects=[
            'local-api-main-config-map:configmap',
            'local-api-main-secret:secret',
            'local-api-main-disruption-budget:poddisruptionbudget',
            'local-api-main-horizontal-scaler:horizontalpodautoscaler',
            'local-api-main-network:networkpolicy'
        ],
        new_name='api-main-resources',
        labels=['resources'],
        resource_deps=['namespace-resources']
    )

    # App Main
    k8s_yaml(kustomize('./kubernetes/overlays/local/applications/app-main'))
    docker_build(
        ref='app-main', 
        context='.', 
        dockerfile='./docker/DockerFile.app-main',
        extra_tag=['latest']
    )
    k8s_resource(
        workload='local-app-main', 
        new_name='app-main', 
        port_forwards='3000:80', # Due to OS restrictions; you cant run this on port 80
        labels=['service']
    )
    k8s_resource(
        objects=[
            'local-app-main-disruption-budget:poddisruptionbudget',
            'local-app-main-horizontal-scaler:horizontalpodautoscaler',
            'local-app-main-network:networkpolicy'
        ],
        new_name='app-main-resources',
        labels=['resources'],
        resource_deps=['namespace-resources']
    )

def setup_service_manual(): 
    local_resource(
        name="api-main",
        serve_cmd="yarn nx run api-main:serve --configuration=development",
        allow_parallel=True,
        serve_env={
            # Database
            "MONGO_CONNECTION_STRING": "mongodb://localhost:27017/api-main",

            # JWT
            "JWT_ACCESS_PUBKEY": os.getenv('JWT_ACCESS_PUBKEY', ''),
            "JWT_ACCESS_PRVKEY": os.getenv('JWT_ACCESS_PRVKEY', ''),
            "JWT_REFRESH_PUBKEY": os.getenv('JWT_REFRESH_PUBKEY', ''),
            "JWT_REFRESH_PRVKEY": os.getenv('JWT_REFRESH_PRVKEY', ''),
        },
        labels=['service'],
        resource_deps=['Yarn Install', 'mongodb']
    )

    local_resource(
        name="app-main",
        serve_cmd="yarn nx run app-main:dev",
        allow_parallel=True,
        serve_env={},
        labels=['application'],
        resource_deps=['Yarn Install', 'mongodb']
    )